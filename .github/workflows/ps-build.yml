name: Process PS Module
on: push

jobs:
  build:

    name: Build module
    runs-on: windows-latest
    outputs:
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.8
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.8
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: Display MajorMinorPatch
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"

      - name: Execute Build
        run: tools/build.ps1 -Task BuildWithTests
        shell: pwsh

      - name: Upload Release artifact
        uses: actions/upload-artifact@v2
        with:
          name: Release
          path: ${{ github.workspace }}/Release

      - name: Upload Tools artifact
        uses: actions/upload-artifact@v2
        with:
          name: Tools
          path: ${{ github.workspace }}/tools

  test_release:

    name: Test Release module
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: windows-latest
    needs: build
    steps:

      - name: Download artifact
        uses: actions/download-artifact@v2

      - name: Publish Module to Test PowerShell gallery
        run: .\Tools\Publish-PSModule.ps1 -ApiKey ${{ secrets.PSTestGalleryApiKey }} -Path ".\Release\ActionsTest" -CheckForExistingVersion -PreRelease -Verbose
        shell: pwsh

  prod_release:

    name: Prod Release module
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: windows-latest
    needs: build
    env:
      MAJORMINORPATCH: ${{ needs.build.outputs.majorMinorPatch }}
    steps:

      - name: Display version
        run: |
          Write-Host "MajorMinorPatch: $ENV:MAJORMINORPATCH"
        shell: pwsh

      - name: Download artifact
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ".\Release\ActionsTest.zip"
          body: "Testing"
          token: ${{ secrets.GITHUB_TOKEN }}